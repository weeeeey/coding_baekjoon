'''
n개의 집들의 좌표가 주어졌을때 c개의 공유기를 특정 집들에 한개씩 설치할려고 한다.
이때 공유기의 집들 사이의 거리를 최대로 잡으면서 설치한다면 가장 긴 거리는?
'''
# 어떻게 풀어야할지 감이 안잡혀서 구글링함
# 단위거리를 잡아놓고 처음 집부터 방문하여 잡을 수 있는 집들의 갯수가 c개를 이상이라면 result에 추가한다.
# 이때 수의 범위가 1조이므로 순환 탐색을 했을시 시간 초과가 뜨기 때문에 단위거리를 잡는 과정을 이진탐색으로 좁혀나간다.
# 단위거리를 이진탐색으로 좁히기 위해서는 공유기와 공유기가 가질수 있는 최대의 거리와 최소의 거리를 구한뒤 2로 나눠주면 됨
# 구해진 단위거리를 처음 집의 위치부터 시작하여 그 다음 집순으로 단위거리를 더해본다.
# 다음 집에 위치가 현재 위치에서 단위거리를 더한 값 이상이라면 cnt + 1 씩 해줌
# 만족했다면 그 다음 집도 또 구해야하므로 출발 지점을 다음 집으로 초기화 해주고 계산
# 최종 cnt가 c개 이하라면 이 단위거리를 너무 크게 잡은것이므로 줄여나가야함 -> end = mid - 1
# 최종 cnt가 c개 이상이라면 이 단위거리는 만족한다는 의미 -> 이 단위거리보다 큰 값도 만족할 수 있으므로 start를 mid+1로 잡아줌
# 이 단위거리는 가능하다는 의미로 result리스트에 추가해줌 -> 점차 단위거리를 크게 할 것이므로 마지막에 들어가는 값이 답



n, c = map(int,input().split())
arr = []
for i in range(n):
  arr.append(int(input()))
arr.sort() 
result = []
start = 1 #단위 거리 1인 최소값
end = arr[-1] - arr[0] #단위거리 최대지점

while(start <= end):
  ini = arr[0]
  cnt = 1
  mid = (start+end)//2  #나올 수 있는 단위거리의 중간값부터 계산(연산횟수를 줄이기위해)
  for i in arr:
    if i >= ini+mid: # 다음 집의 위치가 현재 위치 집에서 단위거리를 더한 값 이상이므로 만족
      cnt+=1
      ini = i  #만족했으니까 그 다음 집도 만족하는지 체크하기 위해 초기화 해줌
  if cnt < c:  # 단위 거리를 크게 잡아서 공유기 설치 가능한 집이 모자른 거니까 단위거리를 좁혀야함
    end = mid - 1
  else:
    result.append(mid) #만족하는 단위거리를 계속 넣다보면 최종으로 들어오는 값이 만족하는 값들중 가장 max인 값
    start = mid + 1
print(result[-1])
    


